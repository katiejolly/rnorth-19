xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
wards <- st_read("https://opendata.arcgis.com/datasets/c35a747b6f3948d19912b1eb268f8996_0.geojson")
wards <- st_read("https://opendata.arcgis.com/datasets/c35a747b6f3948d19912b1eb268f8996_0.geojson")
nb <- st_read("http://opendata.minneapolismn.gov/datasets/minneapolis-neighborhoods")
bee <- st_read("http://opendata.minneapolismn.gov/datasets/honey-bee-permits-2017")
wards <- st_read("https://opendata.arcgis.com/datasets/c35a747b6f3948d19912b1eb268f8996_0.geojson")
nb <- st_read("https://opendata.arcgis.com/datasets/055ca54e5fcc47329f081c9ef51d038e_0.geojson")
bee17 <- st_read("https://opendata.arcgis.com/datasets/f99ce43936d74f718e92a37a560ad875_0.geojson")
wards <- st_read("https://opendata.arcgis.com/datasets/c35a747b6f3948d19912b1eb268f8996_0.geojson") %>%
st_transform(26915)
nb <- st_read("https://opendata.arcgis.com/datasets/055ca54e5fcc47329f081c9ef51d038e_0.geojson") %>%
st_transform(26915)
bee17 <- st_read("https://opendata.arcgis.com/datasets/f99ce43936d74f718e92a37a560ad875_0.geojson") %>%
st_transform(26915)
nb_join <- st_join(nb, bee17)
nb <- nb_join %>%
group_by(BDNAME) %>%
summarise(n_permits = n())
library(spdep)
neighborhoods_sp <- as(nb, "Spatial") # convert our data to sp data
nb_obj <- poly2nb(neighborhoods_sp) # create the neighborhood object
weights <- nb2listw(nb_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
moran(neighborhoods_sp$n_permits, weights, n=length(weights$neighbours), S0=Szero(weights))
set.seed(123)
moran.mc(neighborhoods_sp$n_permits, weights, nsim=9999) # 10000 simulations
ward_join <- st_join(wards, bee17)
names(ward)
names(wards)
ward_nb <- ward_join %>%
group_by(FID) %>%
summarise(n_permits = n())
ward_nb
wards_sp <- as(ward_nb, "Spatial") # convert our data to sp data
ward_obj <- poly2nb(wards_sp) # create the neighborhood object
weights <- nb2listw(ward_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
moran.mc(wards_sp$n_permits, weights, nsim=9999) # 10000 simulations
sector <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson")
sector_join <- st_join(sectors, bee17)
sector_join <- st_join(sector, bee17)
sector <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson") %>%
st_transform(26915)
sector_join <- st_join(sector, bee17)
sector_nb <- sector_join %>%
group_by(FID) %>%
summarise(n_permits = n())
library(spdep)
sectors_sp <- as(sector_nb, "Spatial") # convert our data to sp data
sector_obj <- poly2nb(sectors_sp) # create the neighborhood object
weights <- nb2listw(sector_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
set.seed(123)
moran.mc(sectors_sp$n_permits, weights, nsim=9999) # 10000 simulations
moran.mc(sectors_sp$n_permits, weights, nsim=999) # 10000 simulations
moran(neighborhoods_sp$n_permits, weights, n=length(weights$neighbours), S0=Szero(weights))
moran(sectors_sp$n_permits, weights, n=length(weights$neighbours), S0=Szero(weights))
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_crop(st_bbox(wards))
ggplot(tracts_mpls) + geom_sf()
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards, join = st_within,
left = FALSE)
ggplot(tracts_mpls) + geom_sf()
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards %>% st_union(), join = st_within,
left = FALSE)
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards %>% st_union(.), join = st_within,
left = FALSE)
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards,
left = FALSE)
ggplot(tracts_mpls) + geom_sf()
ggplot(wards) + geom_sf()
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards, join = st_contains,
left = FALSE)
ggplot(tracts_mpls) + geom_sf()
tracts_mpls <- tigris::tracts(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards, join = st_intersects,
left = FALSE)
ggplot(tracts_mpls) + geom_sf()
tract_join <- st_join(tracts_mpls, bee17)
tract <- tract_join %>%
group_by(GEOID) %>%
summarise(n_permits = n())
View(tract)
tract_sp <- as(tract, "Spatial") # convert our data to sp data
tract_obj <- poly2nb(tract_sp) # create the neighborhood object
weights <- nb2listw(tract_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
moran.mc(tract_sp$n_permits, weights, nsim=9999) # 10000 simulations
bg_mpls <- tigris::block_groups(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards, join = st_intersects,
left = FALSE)
bg_join <- st_join(bg_mpls, bee17)
bg <- bg_join %>%
group_by(GEOID) %>%
summarise(n_permits = n())
library(spdep)
bg_sp <- as(bg, "Spatial") # convert our data to sp data
bg_obj <- poly2nb(bg_sp) # create the neighborhood object
weights <- nb2listw(bg_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
moran(neighborhoods_sp$n_permits, weights, n=length(weights$neighbours), S0=Szero(weights))
set.seed(123)
moran.mc(bg_sp$n_permits, weights, nsim=9999) # 10000 simulations
ggplot(bg_mpls) + geom_sf()
xaringan:::inf_mr()
xaringan:::inf_mr()
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(sf)
honeybees <- st_read("https://opendata.arcgis.com/datasets/
f99ce43936d74f718e92a37a560ad875_0.geojson")
honeybees <- st_read("https://opendata.arcgis.com/datasets/f99ce43936d74f718e92a37a560ad875_0.geojson")
plot(honeybees_utm$HiveType)
plot(honeybees_utm %>% select(HiveType))
xaringan:::inf_mr()
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(sf)
knitr::opts_chunk$set(fig.align="center", fig.width=5, fig.height=5)
library(showtext)
bee_grid <- st_make_grid(honeybees_utm, cellsize = .2, square = FALSE)
bee_grid <- st_make_grid(honeybees_utm, cellsize = .4, square = FALSE)
bee_grid <- st_make_grid(honeybees_utm, cellsize = .5, square = FALSE)
bee_grid <- st_make_grid(honeybees_utm, cellsize = 1, square = FALSE)
View(honeybees_utm)
bee_grid <- st_make_grid(honeybees_utm, cellsize = 200, square = FALSE)
View(bee_grid)
bee_grid <- st_make_grid(honeybees_utm, cellsize = 10, square = FALSE)
bee_grid <- st_make_grid(honeybees_utm)
View(bee_grid)
plot(bee_grid)
bee_grid <- st_make_grid(honeybees_utm, quare = FALSE)
bee_grid <- st_make_grid(honeybees_utm, square = FALSE)
bee_grid <- st_make_grid(honeybees_utm)
ggplot(bee_grid) +
geom_sf()
ggplot(bee_grid) +
geom_sf() +
geom_sf(data = honeybees_utm)
grid <- grid_join %>%
group_by(GEOID) %>%
summarise(n_permits = n())
grid_join <- st_join(grid_mpls, bee17)
grid_join <- st_join(bee_grid, bee17)
grid_join <- st_join(bee_grid %>% st_as_sf(), bee17)
View(bee_grid)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(sf)
knitr::opts_chunk$set(fig.align="center", fig.width=5, fig.height=5, warning = FALSE, message = FALSE)
permits_per_nb <- honeybees_utm %>%
st_join(neighborhoods)
head(permits_per_nb)
summary(permits_per_nb$permits)
honeybees_sp <- as(permits_per_nb, "Spatial") # need to convert to SpatialPolygons object
nb_queen <- poly2nb(honeybees_sp, queen = FALSE)
weights <- nb2listw(nb_queen, style = "B") # create a matrix of binary spatial weights (connected or not connected)
set.seed(123)
moran.mc(honeybees_sp$permits, weights, nsim=9999) # 10000 simulations
nb_queen <- poly2nb(honeybees_sp, queen = TRUE)
weights <- nb2listw(nb_queen, style = "B") # create a matrix of binary spatial weights (connected or not connected)
set.seed(123)
moran.mc(honeybees_sp$permits, weights, nsim=9999) # 10000 simulations
plot(nb_queen)
coords <- coordinates(honeybees_sp)
plot(nb_queen, coords)
plot(honeybees_sp)
plot(nb_queen, coords, add = TRUE)
plot(honeybees_sp)
plot(nb_queen, coords, add = TRUE)
coords <- coordinates(honeybees_sp)
plot(honeybees_sp)
plot(nb_queen, coords, add = TRUE, col = "#F78764")
nb_queen
# need to convert to SpatialPolygons object
honeybees_sp <- as(permits_per_nb, "Spatial")
# define neighbor structure
nb_queen <- poly2nb(honeybees_sp, queen = TRUE)
# create a matrix of binary spatial weights (connected or not connected)
weights <- nb2listw(nb_queen, style = "B")
Vx <- lag.listw(nb2listw(nb_queen, style="B"), honeybees_sp$permits)
plot(Vx, honeybees_sp$permits)
Vx
moran.mc(honeybees_sp$permits, weights, nsim=9999)
ggplot(permits_per_nb) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato")) +
labs(title = "Honeybee Permits in Minneapolis Neighborhoods", caption = "Source: Minneapolis Open Data \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B")
ggplot(permits_per_nb) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato")) +
labs(title = "Honeybee Permits in Minneapolis Neighborhoods", caption = "Source: Minneapolis Open Data \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B") +
guides(fill = guide_colorbar(title = "Permits"))
ggplot(permits_per_nb) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato")) +
labs(title = "Honeybee Permits in Minneapolis Neighborhoods", caption = "Source: Minneapolis Open Data \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B") +
guides(fill = guide_colorbar(title = "Permits", ticks = FALSE))
ggplot(permits_per_nb) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato")) +
labs(title = "Honeybee Permits in Minneapolis Neighborhoods", caption = "Source: Minneapolis Open Data \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B") +
guides(fill = guide_colorbar(title = "Permits", ticks = FALSE, direction = "horizontal", position = "bottom"))
ggplot(permits_per_nb) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato"),
legend.position = "bottom") +
labs(title = "Honeybee Permits in Minneapolis Neighborhoods", caption = "Source: Minneapolis Open Data \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B") +
guides(fill = guide_colorbar(title = "Permits", ticks = FALSE, direction = "horizontal", position = "bottom"))
xaringan:::inf_mr()
sectors <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson")
sectors <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson") %>%
st_transform()
sectors <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson") %>%
st_transform(26915)
sectors_sp <- as(sector, "Spatial")
sector_nb <- poly2nb(sectors_sp)
weights <- nb2listw(sector_nb, style = "B")
sector <- st_join(sector, bee17)
grid <- sector %>%
group_by(FID) %>%
summarise(n_permits = n())
sector <- sector %>%
group_by(FID) %>%
summarise(n_permits = n())
sectors <- st_read("https://opendata.arcgis.com/datasets/2504cfc548d9424fb161176070f821bc_0.geojson") %>%
st_transform(26915)
sector <- st_join(sectors, bee17)
sector <- sector %>%
group_by(FID) %>%
summarise(n_permits = n())
sectors_sp <- as(sector, "Spatial")
sector_nb <- poly2nb(sectors_sp)
weights <- nb2listw(sector_nb, style = "B")
moran.mc(sectors_sp$n_permits, weights, nsim = 9999)
moran.mc(sectors_sp$n_permits, weights, nsim = 99)
ggplot(sectors, aes(fill = n_permits)) + geom_sf()
ggplot(sector, aes(fill = n_permits)) + geom_sf()
?include_graphics
bg_mpls <- tigris::block_groups(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_join(wards, join = st_intersects,
left = FALSE)
bg_join <- st_join(bg_mpls, bee17)
bg <- bg_join %>%
group_by(GEOID) %>%
summarise(permits = n())
ggplot(bg) +
geom_sf(aes(fill = permits), color = "#FBF5F3") +
theme_minimal() +
theme(axis.text = element_blank(),
panel.grid.major = element_line("transparent"),
text = element_text(family = "Lato", size = 12)) +
labs(title = "Honeybee Permits in Minneapolis Block Groups", caption = "Source: Minneapolis Open Data & US Census Bureau \n Projection: UTM 15N") +
scale_fill_gradient(low = "#FCF6B1", high = "#F7B32B") +
guides(fill = guide_colorbar(title = "Permits", ticks = FALSE, position = "bottom"))
bg_sp <- as(bg, "Spatial") # convert our data to sp data
bg_obj <- poly2nb(bg_sp) # create the neighborhood object
weights <- nb2listw(bg_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
moran(neighborhoods_sp$n_permits, weights, n=length(weights$neighbours), S0=Szero(weights))
bg_sp <- as(bg, "Spatial") # convert our data to sp data
bg_obj <- poly2nb(bg_sp) # create the neighborhood object
weights <- nb2listw(bg_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
set.seed(123)
moran.mc(bg_sp$n_permits, weights, nsim=9999) # 10000 simulations
bg_sp <- as(bg, "Spatial") # convert our data to sp data
bg_obj <- poly2nb(bg_sp) # create the neighborhood object
weights <- nb2listw(bg_obj, style = "B") # create a matrix of binary spatial weights (connected or not connected)
set.seed(123)
moran.mc(bg_sp$permits, weights, nsim=9999) # 10000 simulations
xaringan:::inf_mr()
streets <- tigris::roads(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915)
library(tidyverse)
streets <- tigris::roads(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915)
library(sf)
streets <- tigris::roads(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915)
ggplot(streets) +
geom_sf() +
theme_void()
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(sf)
knitr::opts_chunk$set(fig.align="center", fig.width=5, fig.height=5, warning = FALSE, message = FALSE)
neighborhoods <- st_read("https://opendata.arcgis.com/datasets/055ca54e5fcc47329f081c9ef51d038e_0.geojson") %>%
st_transform(26915)
streets <- tigris::roads(state = "MN", county = "Hennepin") %>%
st_as_sf() %>%
st_transform(26915) %>%
st_crop(st_bbox(neighborhoods))
ggplot(streets) +
geom_sf() +
theme_void() +
theme(panel.grid.major = element_line("transparent"))
ggsave("images/mpls_streets.svg")
